[{"/Users/danielasante/Desktop/slidertestfolder/src/index.js":"1","/Users/danielasante/Desktop/slidertestfolder/src/App.js":"2","/Users/danielasante/Desktop/slidertestfolder/src/reportWebVitals.js":"3","/Users/danielasante/Desktop/slidertestfolder/src/images.js":"4","/Users/danielasante/Desktop/slidertestfolder/src/components/Slider.js":"5","/Users/danielasante/Desktop/slidertestfolder/src/components/SliderContent.js":"6","/Users/danielasante/Desktop/slidertestfolder/src/components/Slide.js":"7","/Users/danielasante/Desktop/slidertestfolder/src/components/Arrow.js":"8","/Users/danielasante/Desktop/slidertestfolder/src/components/Dots.js":"9"},{"size":500,"mtime":1610393808395,"results":"10","hashOfConfig":"11"},{"size":179,"mtime":1610394583003,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1610393808396,"results":"13","hashOfConfig":"11"},{"size":578,"mtime":1608484228000,"results":"14","hashOfConfig":"11"},{"size":3620,"mtime":1610394604147,"results":"15","hashOfConfig":"11"},{"size":379,"mtime":1610394643571,"results":"16","hashOfConfig":"11"},{"size":406,"mtime":1610394636335,"results":"17","hashOfConfig":"11"},{"size":1014,"mtime":1610394618498,"results":"18","hashOfConfig":"11"},{"size":742,"mtime":1610394628102,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"19tt660",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"22"},"/Users/danielasante/Desktop/slidertestfolder/src/index.js",[],["46","47"],"/Users/danielasante/Desktop/slidertestfolder/src/App.js",[],"/Users/danielasante/Desktop/slidertestfolder/src/reportWebVitals.js",[],"/Users/danielasante/Desktop/slidertestfolder/src/images.js",["48"],"export default [\n  'https://images.unsplash.com/photo-1449034446853-66c86144b0ad?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2100&q=80',\n  'https://images.unsplash.com/photo-1470341223622-1019832be824?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2288&q=80',\n  'https://images.unsplash.com/photo-1448630360428-65456885c650?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2094&q=80',\n  'https://images.unsplash.com/photo-1534161308652-fdfcf10f62c4?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2174&q=80'\n]\n","/Users/danielasante/Desktop/slidertestfolder/src/components/Slider.js",["49","50","51","52"],"\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\nimport { css, jsx } from '@emotion/core'\nimport SliderContent from './SliderContent'\nimport Slide from './Slide'\nimport Arrow from './Arrow'\nimport Dots from './Dots'\n\nconst getWidth = () => window.innerWidth\n\n/**\n * @function Slider\n */\nconst Slider = props => {\n  const { slides } = props\n\n  const firstSlide = slides[0]\n  const secondSlide = slides[1]\n  const lastSlide = slides[slides.length - 1]\n\n  const [state, setState] = useState({\n    activeSlide: 0,\n    translate: getWidth(),\n    transition: 0.45,\n    _slides: [lastSlide, firstSlide, secondSlide]\n  })\n\n  const { activeSlide, translate, _slides, transition } = state\n\n  const autoPlayRef = useRef()\n  const transitionRef = useRef()\n  const resizeRef = useRef()\n  const sliderRef = useRef()\n\n  useEffect(() => {\n    autoPlayRef.current = nextSlide\n    transitionRef.current = smoothTransition\n    resizeRef.current = handleResize\n  })\n\n  useEffect(() => {\n    const slider = sliderRef.current\n\n    const play = () => {\n      autoPlayRef.current()\n    }\n\n    const smooth = e => {\n      if (e.target.className.includes('SliderContent')) {\n        transitionRef.current()\n      }\n    }\n\n    const resize = () => {\n      resizeRef.current()\n    }\n\n    const transitionEnd = slider.addEventListener('transitionend', smooth)\n    const onResize = window.addEventListener('resize', resize)\n\n    let interval = null\n\n    if (props.autoPlay) {\n      interval = setInterval(play, props.autoPlay * 1000)\n    }\n\n    return () => {\n      slider.removeEventListener('transitionend', transitionEnd)\n      window.removeEventListener('resize', onResize)\n\n      if (props.autoPlay) {\n        clearInterval(interval)\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (transition === 0) setState({ ...state, transition: 0.45 })\n  }, [transition])\n\n  const handleResize = () => {\n    setState({ ...state, translate: getWidth(), transition: 0 })\n  }\n\n  const smoothTransition = () => {\n    let _slides = []\n\n    // We're at the last slide.\n    if (activeSlide === slides.length - 1)\n      _slides = [slides[slides.length - 2], lastSlide, firstSlide]\n    // We're back at the first slide. Just reset to how it was on initial render\n    else if (activeSlide === 0) _slides = [lastSlide, firstSlide, secondSlide]\n    // Create an array of the previous last slide, and the next two slides that follow it.\n    else _slides = slides.slice(activeSlide - 1, activeSlide + 2)\n\n    setState({\n      ...state,\n      _slides,\n      transition: 0,\n      translate: getWidth()\n    })\n  }\n\n  const nextSlide = () =>\n    setState({\n      ...state,\n      translate: translate + getWidth(),\n      activeSlide: activeSlide === slides.length - 1 ? 0 : activeSlide + 1\n    })\n\n  const prevSlide = () =>\n    setState({\n      ...state,\n      translate: 0,\n      activeSlide: activeSlide === 0 ? slides.length - 1 : activeSlide - 1\n    })\n\n  return (\n    <div css={SliderCSS} ref={sliderRef}>\n      <SliderContent\n        translate={translate}\n        transition={transition}\n        width={getWidth() * _slides.length}\n      >\n        {_slides.map((_slide, i) => (\n          <Slide width={getWidth()} key={_slide + i} content={_slide} />\n        ))}\n      </SliderContent>\n\n      <Arrow direction=\"left\" handleClick={prevSlide} />\n      <Arrow direction=\"right\" handleClick={nextSlide} />\n\n      <Dots slides={slides} activeSlide={activeSlide} />\n    </div>\n  )\n}\n\nconst SliderCSS = css`\n  position: relative;\n  height: 100vh;\n  width: 100vw;\n  margin: 0 auto;\n  overflow: hidden;\n  white-space: nowrap;\n`\n\nexport default Slider\n","/Users/danielasante/Desktop/slidertestfolder/src/components/SliderContent.js",["53"],"\nimport React from 'react'\nimport { css, jsx } from '@emotion/core'\n\nconst SliderContent = props => (\n  <div\n    css={css`\n      transform: translateX(-${props.translate}px);\n      transition: transform ease-out ${props.transition}s;\n      height: 100%;\n      width: ${props.width}px;\n      display: flex;\n    `}\n  >\n    {props.children}\n  </div>\n)\n\nexport default SliderContent\n","/Users/danielasante/Desktop/slidertestfolder/src/components/Slide.js",["54"],"/** @jsx jsx */\nimport React, { memo } from 'react'\nimport { css, jsx } from '@emotion/core'\n\nconst Slide = ({ content, width }) => {\n  return (\n    <div\n      css={css`\n        height: 100%;\n        width: ${width}px;\n        background-image: url('${content}');\n        background-size: cover;\n        background-repeat: no-repeat;\n        background-position: center;\n      `}\n    />\n  )\n}\n\nexport default memo(Slide)\n",["55","56"],"/Users/danielasante/Desktop/slidertestfolder/src/components/Arrow.js",["57","58","59"],"\nimport React, { memo } from 'react'\nimport { css, jsx } from '@emotion/core'\nimport leftArrow from '../img/left-arrow.svg'\nimport rightArrow from '../img/right-arrow.svg'\n\nconst Arrow = ({ direction, handleClick }) => {\n  return (\n    <div\n      onClick={handleClick}\n      css={css`\n        display: flex;\n        position: absolute;\n        top: 50%;\n        ${direction === 'right' ? `right: 25px` : `left: 25px`};\n        height: 50px;\n        width: 50px;\n        justify-content: center;\n        background: white;\n        border-radius: 50%;\n        cursor: pointer;\n        align-items: center;\n        transition: transform ease-in 0.1s;\n  \n        &:hover {\n          transform: scale(1.1);\n        }\n  \n        img {\n          transform: translateX(${direction === 'left' ? '-2' : '2'}px);\n  \n          &:focus {\n            outline: 0;\n          }\n        }\n      `}\n    >\n      {direction === 'right' ? <img src={rightArrow} /> : <img src={leftArrow} />}\n    </div>\n  )\n}\n\nexport default memo(Arrow)\n","/Users/danielasante/Desktop/slidertestfolder/src/components/Dots.js",["60"],"/** @jsx jsx */\nimport React, { memo } from 'react'\nimport { css, jsx } from '@emotion/core'\n\nconst Dot = ({ active }) => {\n  return (\n    <span\n      css={css`\n        padding: 10px;\n        margin-right: 5px;\n        cursor: pointer;\n        border-radius: 50%;\n        background: ${active ? 'black' : 'white'};\n      `}\n    />\n  )\n}\n\nconst MemoDot = memo(Dot)\n\nconst Dots = ({ slides, activeSlide }) => {\n  return (\n    <div\n      css={css`\n        position: absolute;\n        bottom: 25px;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      `}\n    >\n      {slides.map((slide, i) => (\n        <MemoDot key={slide} active={activeSlide === i} />\n      ))}\n    </div>\n  )\n}\n\nexport default Dots\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","endLine":6,"endColumn":2},{"ruleId":"68","severity":1,"message":"69","line":2,"column":46,"nodeType":"70","messageId":"71","endLine":2,"endColumn":57},{"ruleId":"68","severity":1,"message":"72","line":3,"column":15,"nodeType":"70","messageId":"71","endLine":3,"endColumn":18},{"ruleId":"73","severity":1,"message":"74","line":75,"column":6,"nodeType":"75","endLine":75,"endColumn":8,"suggestions":"76"},{"ruleId":"73","severity":1,"message":"77","line":79,"column":6,"nodeType":"75","endLine":79,"endColumn":18,"suggestions":"78"},{"ruleId":"68","severity":1,"message":"72","line":3,"column":15,"nodeType":"70","messageId":"71","endLine":3,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},{"ruleId":"61","replacedBy":"80"},{"ruleId":"63","replacedBy":"81"},{"ruleId":"68","severity":1,"message":"79","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":38,"column":32,"nodeType":"84","endLine":38,"endColumn":56},{"ruleId":"82","severity":1,"message":"83","line":38,"column":59,"nodeType":"84","endLine":38,"endColumn":82},{"ruleId":"68","severity":1,"message":"79","line":2,"column":8,"nodeType":"70","messageId":"71","endLine":2,"endColumn":13},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","'jsx' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.autoPlay'. Either include it or remove the dependency array.","ArrayExpression",["87"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["88"],"'React' is defined but never used.",["85"],["86"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},"Update the dependencies array to be: [props.autoPlay]",{"range":"93","text":"94"},"Update the dependencies array to be: [state, transition]",{"range":"95","text":"96"},[1752,1754],"[props.autoPlay]",[1849,1861],"[state, transition]"]